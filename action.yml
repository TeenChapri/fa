name: "Build Flutter App (APK/AAB/IPA),Deploy Flutter web app to github pages , only runs on MAC runner"
description: "Automates the build and deployment of your Flutter web app on Github gh pages, "
author: "manishmg3994"
#currently either apk/aab or ipa , single path is supported
branding:
  color: "red"
  icon: "rocket"

# env: # ADD environment variables  TODO:
#       KEY_JKS: ${{ secrets.KEY_JKS }}
#       KEY_ALIAS: ${{ secrets.KEY_ALIAS }}   # TODO
#       KEY_PATH: "key.jks"
#       KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#       ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}

inputs: # add new run in release input
  # PAT:
  #   description: "Github Personal Access Token (Classic)"
  #   required: true
  #   type: string
  # tag:
  #   description: "Release Tag"
  #   required: false
  #   type: string
  #   default: v1.0.${{ github.run_number }}
  release:
    description: "If set to `true`, it will run release builds, otherwise debug builds"
    required: false
    default: false
  keystore:
    description: "Base64 encoded keystore.jks, required if release is true"
    required: false
    default: ""
  keystore-pwd:
    description: "keystore password, required if release is true"
    required: false
    default: ""
  key-pwd:
    description: "key password, required if release is true"
    required: false
    default: ""
  aab_generation:
    description: "Generate AAB"
    required: false
    default: false
    type: boolean
  apk_generation:
    description: "Generate Apk"
    required: false
    default: false
    type: boolean
  ipa_generation:
    description: "Generate IPA (IOS)"
    required: false
    default: false
    type: boolean
  gh_pages:
    description: "Deploy to Github Pages"
    required: false
    default: false
    type: boolean
  build_runner_build:
    description: "Build Runner Build"
    required: false
    default: false
    type: boolean
  change_splash:
    description: "Change Splash"
    required: false
    default: false
    type: boolean
  i18n_generation:
    description: "Generate i18n"
    required: false
    default: false
    type: boolean
  generate_launcher_icons:
    description: "Generate Launcher Icons"
    required: false
    default: false
    type: boolean
  custom_app_name:
    description: "Custom App Name (Leave empty to skip)"
    required: false
    type: string
  custom_package_name:
    description: "Custom Package Name (Leave empty to skip)"
    required: false
    type: string
  webRenderer:
    description: "Which web renderer to be used, default is auto"
    required: false
    default: auto
    type: string
  workingDir:
    description: "The directory where the project is (default .)"
    required: false
    default: .
    # type: string
  targetBranch:
    required: false
    default: gh-pages
    type: string
  baseHref:
    description: "base href (if applicable)"
    required: false
    default: "/"
    type: string
  customArgs:
    description: 'Custom args like: --dart-define="simple=example"'
    required: false
    default:
    type: string

outputs:
  apk-path:
    description: "Path to built apk if build-type was set to apk or aab"
    value: ${{ steps.android-path-output.outputs.apk-path }}
  aab-path:
    description: "Path to built aab if build-type was set to aab or aab"
    value: ${{ steps.android-path-output.outputs.aab-path }}
  ipa-path:
    description: "Path to built IPA file if build-type was set for IOS"
    value: ${{ steps.ios-path-output.outputs.ipa-path }}

runs:
  using: "composite"
  steps:
    - run: flutter pub get
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - run: echo "${{ inputs.keystore }}" | base64 -d > android/keystore.jks
      working-directory: ${{inputs.workingDir}}
      shell: bash
    - if: ${{ inputs.custom_package_name != '' ||  inputs.custom_app_name != ''}} # activate rename
      shell: bash
      run: flutter pub global activate rename
    - if: ${{ inputs.build_runner_build == 'true' }} #name: Build Runner Build
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    - if: ${{ inputs.change_splash == 'true' }} #name: Change Splash
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: flutter pub run flutter_native_splash:create
    - if: ${{ inputs.generate_launcher_icons == 'true' }} #name: Generate Launcher Icons
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: flutter pub run flutter_launcher_icons
    - if: ${{ inputs.i18n_generation == 'true' }} #name: Generate i18n
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: flutter gen-l10n
    - if: ${{ inputs.custom_app_name != '' }} #name: Change App Name
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: rename setAppName --value "${{ inputs.custom_app_name }}"
    - if: ${{ inputs.custom_package_name != '' }} #name: Change Package Name
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: rename setBundleId --value "${{ inputs.custom_package_name }}"
    # - if: ${{ inputs.aab_generation == 'true' || inputs.apk_generation == 'true' }}
    - env:
        KEY_PWD: ${{ inputs.key-pwd }}
        KEYSTORE_PWD: ${{ inputs.keystore-pwd }}
    - if: ${{ inputs.aab_generation == 'true' || inputs.apk_generation == 'true'  }} #name: Generate AAB or APK
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: |
        if [[ ${{ inputs.release }} == true ]]; then

          if [[ ${{ inputs.apk_generation }} == true ]]; then
            flutter build apk --release --split-per-abi ${{inputs.customArgs}} || true
          fi
          if [[ ${{ inputs.aab_generation }} == true ]]; then
            flutter build appbundle --release ${{inputs.customArgs}} || true
          fi

        else

          if [[ ${{ inputs.apk_generation }} == true ]]; then
            flutter build apk --debug ${{inputs.customArgs}} || true
          fi
          if [[ ${{ inputs.aab_generation }} == true ]]; then
            flutter build appbundle --debug ${{inputs.customArgs}} || true
          fi
        fi
    - if: ${{ inputs.aab_generation == 'true' || inputs.apk_generation == 'true'  }} #name: Set Path of AAB or APK
      shell: bash
      id: android-path-output
      working-directory: ${{inputs.workingDir}}
      run: |
        if [ ${{ inputs.release }} = "true" ]; then

          if [[ ${{ inputs.apk_generation }} == true ]]; then
            APK_PATH=build/app/outputs/apk/release/`ls build/app/outputs/apk/release | grep apk`
            if [ ! -f $APK_PATH ]; then
              exit 1
            fi
            echo "::set-output name=apk-path::$(echo $APK_PATH)"
          fi

          if [[ ${{ inputs.aab_generation }} == true ]]; then
            AAB_PATH=build/app/outputs/bundle/release/`ls build/app/outputs/bundle/release | grep aab`
            if [ ! -f $AAB_PATH ]; then
              exit 1
            fi
            echo "::set-output name=aab-path::$(echo $AAB_PATH)"
          fi

        else

          if [[ ${{ inputs.apk_generation }} == true ]]; then
            APK_PATH=build/app/outputs/apk/debug/`ls build/app/outputs/apk/debug | grep apk`
            if [ ! -f $APK_PATH ]; then
              exit 1
            fi
            echo "::set-output name=apk-path::$(echo $APK_PATH)"
          fi

          if [[ ${{ inputs.aab_generation }} == true ]]; then
            AAB_PATH=build/app/outputs/bundle/debug/`ls build/app/outputs/bundle/debug | grep aab`
            if [ ! -f $AAB_PATH ]; then
              exit 1
            fi
            echo "::set-output name=aab-path::$(echo $AAB_PATH)"
          fi
        fi

    # - if: ${{ inputs.apk_generation == 'true' }} #name: Generate APK
    #   shell: bash
    #   working-directory: ${{inputs.workingDir}}
    #   run: |
    #     flutter build apk --release --split-per-abi ${{inputs.customArgs}}
    #     echo "artifact_path_2=build/app/outputs/flutter-apk/*" >> $GITHUB_ENV

    - if: ${{ inputs.ipa_generation == 'true' }} #name: build IPA FIle # TODO POD INTALL , condition for mac runner
      id: ios-path-output
      shell: bash
      working-directory: ${{inputs.workingDir}}
      run: | # TODO: change this completely as we hve to sign the ipa
        flutter build ios --release ${{inputs.customArgs}}
        IPA_PATH=build/ios/iphoneos/`ls build/ios/iphoneos/ | grep ipa`
           if [ ! -f $IPA_PATH ]; then
              exit 1
            fi
            echo "::set-output name=ipa-path::$(echo $IPA_PATH)"

    # - name: Push to Releases
    #   uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: ${{ env.artifact_path_1 }} ${{ env.artifact_path_2 }} ${{ env.artifact_path_3 }}
    #     tag: ${{ inputs.tag }}
    #     token: ${{ inputs.PAT }}

    - if: ${{ inputs.gh_pages == 'true' }}
      run: flutter config --enable-web # TODO release web build
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: flutter build web --release --web-renderer=${{inputs.webRenderer}} --base-href ${{inputs.baseHref}} ${{inputs.customArgs}}
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: git config user.name github-actions
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: git config user.email github-actions@github.com
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: git --work-tree build/web add --all
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: git commit -m "Automatic deployment by github-actions"
      shell: bash
      working-directory: ${{inputs.workingDir}}
    - if: ${{ inputs.gh_pages == 'true' }}
      run: git push origin HEAD:${{inputs.targetBranch}} --force
      shell: bash
      working-directory: ${{inputs.workingDir}}
